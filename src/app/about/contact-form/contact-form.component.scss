@use "sass:map";
@use "sass:math";
@use "sass:selector";
@use "global";
@use "shapes";

@import "./contact-form.colors";

// TODO: Use direct properties when shorthand not required (background, margin)

$half-margin: 1em;
$net-half-width: calc(50% - #{math.div($half-margin, 2)});
$textarea-height: 10em;
$textarea-label-height-fix: 4px;
$input-element-padding: 1em;

@mixin form-element {
	border: 1px solid map.get($theme, "accent", "hex");
	background-color: transparent;
	color: map.get($theme, "accent", "invert", "hex");
	backdrop-filter: blur(0.5em);
	mix-blend-mode: lighten;
	transition: background-color 0.5s;

	@supports not ((-webkit-backdrop-filter: none) or (backdrop-filter: none)) {
		mix-blend-mode: normal;
	}

	&:focus {
		background-color: map.get($theme, "background", "dark-5%", "hex");
	}
}

:host > form#contact-form > ul {
	margin: 0;
	padding: 0;

	& > li {
		position: relative;
		display: block;
		margin-bottom: 1em;
		clear: both;
		overflow: hidden;

		&.half {
			margin-left: $half-margin;
			width: $net-half-width;
			float: left;
			clear: none;

			&:first-child {
				margin-left: 0;
			}
		}

		& > .input-field {
			box-sizing: border-box;
			width: 100%;
			height: 3em;
			font-size: 16px;
			padding: $input-element-padding;

			@include form-element;

			@at-root #{selector-replace(&, ".input-field", "input.input-field")}:not([ type=submit ]) {
				padding: 0 $input-element-padding;

				&:focus {
					outline: 0;
				}
			}

			@at-root #{selector-replace(&, ".input-field", "textarea.input-field")} {
				height: $textarea-height;

				& + .input-label:after {
					height: calc(#{$textarea-height + (2 * $input-element-padding)} + #{$textarea-label-height-fix});
				}
			}

			@at-root #{selector-replace(&, ".input-field", "input.input-field")}[ type=submit ] {
				padding: 0.5em 2em;
				font-size: 0.85em;
				letter-spacing: 0.2em;

				&:hover + .input-label:after {
					transform: translate3d(0, 0, 0);
				}
			}

			&:focus + .input-label:after {
				transform: translate3d(0, 0, 0) !important;
			}
		}

		& > .input-label {
			&:after {
				content: "";
				position: absolute;
				top: 0;
				left: 0;
				pointer-events: none;
				width: 100%;
				height: 100%;
				transform: translate3d(-100%, 0, 0);
				background-color: invert(map.get($theme, "background", "hex"));
				transition: transform 0.3s;
				mix-blend-mode: exclusion;
			}
		}

		&.submit {
			margin-right: 1em;
			float: right;

			& > .input-label:after {
				clip-path: shapes.get-shape(["snipped-rectangle", "top-left"], 1em);
			}
		}
	}
}
