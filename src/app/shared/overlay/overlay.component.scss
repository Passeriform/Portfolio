@use "global";
@use "sass:map";

@import "./overlay.colors";

:host {
	& > .overlay-button {
		position: absolute;
		top: global.$shrink-header-size;
		right: 0;
		width: global.$overlay-flap-size;
		height: global.$overlay-flap-size;
		background-color: map.get($theme, "background", "invert", "hex");
		clip-path: polygon(0 0, 100% 0%, 100% 100%);
		mix-blend-mode: difference;
		transition: all 0.5s ease;
		cursor: pointer;
	}

	&.blink {
		&:after {
			content: "";
			position: absolute;
			top: global.$shrink-header-size;
			right: 0;
			width: 1.25 * global.$overlay-flap-size;
			height: 1.25 * global.$overlay-flap-size;
			background-color: map.get($theme, "background", "invert", "hex");
			opacity: 1;
			clip-path: polygon(0 0, 100% 0%, 50% 50%);
			animation: blink 1s ease-out infinite;
			pointer-events: none;
		}

		& > .overlay-button {
			mix-blend-mode: normal;
		}
	}

	& > .overlay {
		position: absolute;
		top: 0;
		left: 0;
		width: 100vw;
		height: 100vh;
		opacity: 0;
		transition: opacity 0.5s ease, backdrop-filter 0.5s ease;
		pointer-events: none;

		@supports ((-webkit-backdrop-filter: blur(2em)) or (backdrop-filter: blur(2em))) {
			& {
				backdrop-filter: none;
			}
		}

		&:before {
			content: "";
			position: absolute;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;
			background-color: black;
			opacity: 0;
			transition: all 0.3s ease;
			pointer-events: none;
		}

		&.show {
			opacity: 1;
			pointer-events: all;

			@supports ((-webkit-backdrop-filter: blur(2em)) or (backdrop-filter: blur(2em))) {
				& {
					backdrop-filter: blur(2em);

					&:before {
						opacity: 0;
					}
				}
			}

			& ~ .overlay-button {
				width: 1.25 * global.$overlay-flap-size;
				height: 1.25 * global.$overlay-flap-size;
			}

			&:before {
				opacity: 0.9;
			}
		}
	}

	& > svg {
		position: absolute;
	}
}

@keyframes blink {
	0% {
		clip-path: polygon(20% 0, 100% 0%, 100% 80%);
		opacity: 1;
	}

	100% {
		clip-path: polygon(0 0, 100% 0%, 100% 100%);
		opacity: 0;
	}
}
