@use "sass:map";
@use "sass:math";
@use "colors" as *;
@use "global" as *;
@use "shapes" as *;
@use "modifiers" as *;
@use "stack" as *;

$theme: get-theme("navigator");

@mixin navigator-flap-pseudo {
	content: "";
	z-index: -1;
	background-color: map.get($theme, "accent", "hex");
	transform-origin: top;
	transition: all 0.2s;
	clip-path: polygon(100% 0, 100% 0, 100% 100%, 0 100%);

	@include absolute-top-right;
}

:host {
	position: absolute;
	transition: all 0.2s;

	@include equal-dim($navigator-flap-size);
	@include stack("navigator");
	@include absolute-bottom-right;

	&::before {
		width: 50%;
		/* stylelint-disable-next-line unit-allowed-list -- Fix for non-matching element overlap on Gecko browsers */
		height: calc(math.div($navigator-flap-size, 2) + 1px);

		@include navigator-flap-pseudo;
	}

	&::after {
		width: 100%;
		height: $navigator-flap-size;

		@include navigator-flap-pseudo;
	}

	& > #action-icon {
		color: map.get($theme, "accent", "invert", "hex");
		transition: all 0.2s;

		@include center-anchored-image;

		@include shape-content-props("flap", $navigator-flap-size) using ($flap-content-size, $flap-content-offset) {
			top: $navigator-flap-size - $flap-content-offset;
			left: $navigator-flap-size - $flap-content-offset;

			& > img {
				transition: all 0.2s;

				@include equal-dim($flap-content-size);
			}
		}
	}

	// TODO: Remove later

	// TODO: Fix flex direction later

	// TODO: Use mixin for flex
	& > #command-init {
		// TODO: Parameterize bottom as 3em(flap-size) + 0.5em(padding)
		bottom: 3.5em;
		width: $navigator-expand-length - $navigator-flap-size;
		height: 2em;
		border: none;
		color: map.get($theme, "highlight", "hex");
		transition: all 0.2s;

		@include flex-row-center;
		@include absolute-right;
		@include hide;
		// TODO: Convert to pointer-disable-until
		@include pointer-disable;
		@include no-bg;

		& > #prompt {
			padding: auto 0.5em;
			padding-right: 0;
			font-weight: 700;
		}

		& > input {
			padding: auto 0.5em;
			border: none;
			color: map.get($theme, "highlight", "hex");

			@include full-perc-size;
			@include no-bg;
		}
	}

	& > #click-capture {
		right: 0;
		// TODO: Check if required
		display: block;
		width: $navigator-flap-size;
		height: 100%;
		cursor: pointer;
		clip-path: polygon(100% 0, 100% 0, 100% 100%, 0 100%);

		@include absolute-bottom;
		@include no-bg;
	}

	&.expanded {
		width: $navigator-expand-length;

		& > #click-capture {
			right: $navigator-expand-length - $navigator-flap-size;
			bottom: 50%;
			height: 50%;

			@include shape(["arrow", "point-down"]);
		}

		&::before {
			width: 75%;

			@include shape(["snipped-rectangle", "bottom-right"], math.div($navigator-flap-size, 2));
		}

		&::after {
			transform: scaleY(-50%) translateY(50%);
			transform-origin: center;

			@include layer(difference);
			@include shape(["snipped-rectangle", "bottom-right"], math.div($navigator-flap-size, 2));
		}

		& > #action-icon {
			@include shape-content-props("arrow", $navigator-flap-size, math.div($navigator-flap-size, 2)) using ($arrow-content-size, $arrow-content-offset) {
				top: $arrow-content-offset;
				left: math.div($navigator-flap-size, 2);

				& > img {
					@include equal-dim($arrow-content-size);
				}
			}
		}

		& > #command-init {
			@include unhide;
			@include pointer-enable;
		}
	}
}
