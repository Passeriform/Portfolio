@use "sass:map";
@use "sass:math";
@use "colors" as *;
@use "media" as *;
@use "modifiers" as *;
@use "page" as *;
@use "stack" as *;

$theme: get-theme("error");

:host {
	display: block;

	@include absolute-top-left;
	@include stack("error");
	@include pointer-disable-until(".show");
	@include hide;

	&.show {
		@include unhide;
	}

	& .page {
		@include page;
	}

	& #greeter {
		& > .bg-img-wrapper > .bg-img {
			background-color: map.get($theme, "background", "hex");
		}

		& > .content {
			@include center-text;
			@include flex-column-evenly;

			& > .error-greeter {
				margin: 5em 0;

				& > h1 {
					font-size: 8rem;
				}

				& > h5 {
					margin-top: -1.5rem;
					font-size: 1.35rem;
				}
			}

			& > p {
				margin: 2rem;
				font-size: 1.75rem;
				font-weight: 200;
			}

			& > .blur-fix {
				background-color: map.get($theme, "shadow", "hex");
				transition: opacity 0.3s ease, backdrop-filter 0.5s ease;

				@include absolute-top-left;
				@include full-perc-size;
				@include hide;
				@include pointer-disable;
				@include if-supported("backdrop-filter", none);

				&.activate {
					@include unhide;
					@include pointer-enable;
					@include if-supported("backdrop-filter", blur(2em));

					@include override-modifiers {
						opacity: 0.9;
					}
				}
			}

			& > .debug-window {
				padding: 1rem 2rem;
				max-height: 25vh;
				width: 60%;
				height: 100%;
				overflow: auto;
				border-radius: 0.4em;
				box-shadow: 0 0 0.2em 0.2em map.get($theme, "shadow", "hex") inset;
				background-color: map.get($theme, "background", "dark-10%", "hex");
				transition: all 0.3s ease-in-out;

				&.expand {
					$expanded-size-perc: 80%;
					min-height: 5em;
					max-height: 80vh;
					width: $expanded-size-perc;
					height: $expanded-size-perc;
					transform: translateY(-#{math.div($expanded-size-perc, 2)});
					background-color: map.get($theme, "background", "hex");
				}

				& > .debug-wrapper {
					display: table;
					height: 100%;
					text-align: left;
					border-collapse: collapse;

					& > div {
						display: table-row;

						& > span {
							display: table-cell;
							padding: 0.5rem;
							height: 100%;
							vertical-align: middle;

							&.entry-key {
								color: map.get($theme, "highlight", "hex");
								font-weight: 500;
							}

							&.entry-value {
								color: map.get($theme, "accent", "hex");
								font-weight: 200;
							}
						}
					}
				}
			}
		}
	}
}
