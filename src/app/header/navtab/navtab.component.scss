@use "sass:map";
@use "sass:math";
@use "global" as *;
@use "shapes" as *;
@use "media" as *;
@use "modifiers" as *;
@use "stack" as *;

@import "./navtab.colors";

$link-padding: max(#{$header-padding-offset-mobile}, 5%);
$stack-order: (
	"pseudo",
	"tab",
);

@mixin after-mixer {
	& > li {
		& > a:after {
			// TODO: Try using flex-child instead of this positioning hack
			transition: all 0.5s ease;
			transform: scaleY(0.05);
			transform-origin: bottom;
			background-color: map.get($theme, "background", "invert", "hex");

			@include absolute-center;
			@include layer(difference);
			@include content-fix;
			@include full-perc-size;
			@include shape(["skewed-pentagon", "top"], ("first": 0, "second": 0, "peak-shift": 50%));

			@include override-modifiers {
				width: 80%;
			}
		}

		&:hover > a:after {
			transform: scaleY(1);

			@include shape(["skewed-pentagon", "top"], ("first": 35%, "second": 15%, "peak-shift": 70%));
		}
	}
}

@mixin mobile-navtab {
	padding:
		math.div($header-padding-offset-mobile, 2) // Top
		$link-padding // Right
		3 * math.div($header-padding-offset-mobile, 2) // Bottom
		calc(#{$header-padding-offset-mobile} + #{$link-padding}); // Left
	min-width: 10rem;
	max-width: 14rem;
	width: 100%;
	background-color: map.get($theme, "background", "invert", "hex");

	@include flex-column-start;
	@include shape(
		["distorted-square", "top-right"],
		("left": $header-padding-offset-mobile, "corner-x": 0, "corner-y": calc(100% - #{$header-padding-offset-mobile}))
	);

	@include override-modifiers {
		align-items: stretch;
	}

	& > li {
		a {
			color: map.get($theme, "foreground", "invert", "hex");
			text-shadow: 1px solid map.get($theme, "foreground", "hex");

			&:before {
				z-index: -1;
				width: 100%;
				height: 2.5em;
				transform: scaleX(0.05);
				transform-origin: left;
				background-color: map.get($theme, "background", "invert", "hex");

				@include layer(difference);
			}
		}

		&:hover > a {
			color: map.get($theme, "foreground", "hex");
			text-shadow: 1px solid map.get($theme, "foreground", "accent", "hex");

			&:before {
				transform: scaleX(1);
			}
		}
	}
}

@mixin normal-navtab {
	@include flex-row-start;
	@include after-mixer;

	& > li {
		padding-top: 1.2em;
		padding-bottom: 0.8em;

		a {
			color: map.get($theme, "foreground", "hex");

			&:before {
				width: 80%;
				height: 100%;
				transition: all 0.2s ease;
				transform: scaleY(0.05);
				transform-origin: bottom;
				background-color: map.get($theme, "background", "hex");

				@include layer(overlay);
				@include shape(["skewed-pentagon", "top"], ("first": 0, "second": 0, "peak-shift": 50%));
			}
		}

		&:hover > a:before {
			transform: scaleY(1);

      @include shape(["skewed-pentagon", "top"], ("first": 20%, "second": 35%, "peak-shift": 25%));
		}
	}
}

@mixin shrink-navtab {
	padding: 0 0.5em;
	padding-left: 2em;
	background-color: map.get($theme, "background", "invert", "hex");

	@include flex-row-start;
	@include shape(["skewed-pentagon", "left"], ("first": 1.5em, "second": 2em, "peak-shift": 1.5em));

	& > li {
		padding: 1em;
		line-height: 2em;

		& > a {
			color: map.get($theme, "accent", "invert", "hex");
			text-shadow: 1px solid map.get($theme, "accent", "hex");

			&:before {
				width: 90%;
				transform: scaleX(0) translateX(-6%);
				background-color: map.get($theme, "background", "invert", "hex");

				@include layer(difference);
				@include shape(["skewed-pentagon", "left"], ("first": 0.75em, "second": 1em, "peak-shift": 0.75em));
			}
		}
	}

	& > li:hover > a:before {
		transform: scaleX(1) translateX(-6%);
		background-color: map.get($theme, "background", "invert", "hex");
	}
}

:host {
	min-width: calc(100% - #{$header-size-em});
	height: 100%;

	@include flex-row-center;
	@include stack("navtab");

	@include override-modifiers {
		justify-content: flex-end;
	}

	@include media("screen", "<=phone") {
		align-items: flex-start;
	}

	& ::ng-deep ul {
		margin: 0;
		padding: #{math.div(($nav-ul-height - 1em), 4)} 5%;
		transition: all 0.5s ease;

		@include no-overflow;

		& > li {
			// TODO: Special use-case. Check if can be modified or reused.
			position: relative;
			padding: 1em 2em;
			text-align: center;
			cursor: pointer;
			transition: all 0.5s ease;

			& > a {
				font-weight: 500;
				text-decoration: none;
				text-transform: uppercase;
				transition: all 0.5s ease;

				&:before {
					height: 2em;
					transition: all 0.5s ease;

					@include absolute-center;
					@include content-fix;
				}
			}
		}

		&.shrink-navtab {
			@include shrink-navtab;
		}

		&:not(.shrink-navtab) {
			@include media("screen", "<=phone") {
				@include mobile-navtab;
			}

			@include media("screen", ">phone") {
				@include normal-navtab;
			}
		}
	}

	&.logo-shrink-fix {
		min-width: calc(100% - #{$shrink-header-size-em});
	}
}
