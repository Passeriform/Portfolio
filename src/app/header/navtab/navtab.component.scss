@use "global";
@use "../header.component" as header;
@use "sass:map";
@use "sass:math";

@import "./navtab.colors";

/* Check once */
$nav-ul-height: math.div(header.$header-size, 2);

:host {
	display: flex;
	align-items: center;
	justify-content: flex-end;
	height: 100%;

	& ::ng-deep ul {
		display: flex;
		flex-flow: row nowrap;
		align-content: flex-end;
		justify-content: flex-start;
		margin: 0;
		padding: #{math.div(($nav-ul-height - 1em), 4)} 5%;
		overflow: hidden;
		transition: all 0.5s ease;

		& > li {
			position: relative;
			display: inline-block;
			padding: 1em 2em;
			cursor: pointer;
			transition: all 0.5s ease;

			& > a {
				font-weight: 500;
				text-decoration: none;
				text-transform: uppercase;
				transition: all 0.5s ease;

				&:before {
					content: "";
					position: absolute;
					top: 0;
					right: 0;
					bottom: 0;
					left: 0;
					margin: auto;
					height: 2em;
					transition: all 0.5s ease;
				}
			}
		}

		&.shrink-navtab {
			padding: 0 0.5em;
			padding-left: 2em;
			background-color: map.get($theme, "accent", "hex");
			clip-path: polygon(1.5em 0, 100% 0, 100% 100%, 2em 100%, 0 1.5em);

			& > li {
				padding: 1em;
				line-height: 2em;

				& > a {
					color: invert(map.get($theme, "accent", "hex"));

					&:before {
						top: 0;
						bottom: 0;
						width: 80%;
						transform: scaleX(0);
						background-color: mix(black, map.get($theme, "accent", "hex"), 100%);
						mix-blend-mode: difference;
					}
				}
			}

			& > li:hover > a:before {
				border: 1px solid invert(map.get($theme, "accent", "hex"));
				transform: scaleX(1);
				background-color: mix(white, invert(map.get($theme, "background", "hex")), 100%);
			}
		}

		&:not(.shrink-navtab) {
			& > li {
				& > a {
					color: map.get($theme, "accent", "hex");

					&:before {
						width: 80%;
						height: 100%;
						transform: scaleY(0.05);
						transform-origin: bottom;
						background-color: black;
						mix-blend-mode: overlay;
					}
				}

				&:hover > a:before {
					transform: scaleY(1);
				}
			}

			@media screen and (min-width: 28em) {
				& > li {
					& > a:after {
						content: "";
						position: absolute;
						top: 0;
						right: 0;
						bottom: 0;
						left: 0;
						margin: auto;
						transition: all 0.2s ease;
						width: 80%;
						height: 100%;
						transform: scaleY(0.05);
						transform-origin: bottom;
						background-color: map.get($theme, "accent", "hex");
						mix-blend-mode: difference;
					}

					&:hover > a:after {
						transform: scaleY(1);
					}
				}
			}

			@media screen and (max-width: 28em) {
				flex-direction: column;
				padding-bottom: #{math.div(($nav-ul-height - 1em), 4) + 0.5em};
				padding-left: 10%;
				background-color: invert(map.get($theme, "background", "hex"));
				clip-path: polygon(1.25rem 0, 100% 0%, 100% 100%, 0 90%);

				& > li {
					text-align: center;

					& > a {
						color: invert(map.get($theme, "accent", "hex"));

						&:before {
							z-index: -1;
							width: 100%;
							height: 2.5em;
							visibility: visible;
							transform: scaleX(0.05);
							transform-origin: left;
							background-color: invert(map.get($theme, "background", "hex"));
							mix-blend-mode: difference;
						}
					}

					&:hover > a {
						color: map.get($theme, "accent", "hex");
					}
				}
			}
		}
	}

	&.logo-shrink-fix {
		min-width: calc(100% - #{header.$shrink-header-size});
	}
}
