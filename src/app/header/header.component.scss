@use "sass:map";
@use "global" as *;
@use "shapes" as *;
@use "media" as *;
@use "modifiers" as *;
@use "stack" as *;

@import "./header.colors";

$logo-size-shrink: $small-block-em;
$logo-size-normal: $big-block-em;
$logo-size-mobile: $big-block-mobile-em;
$logo-img-size: $small-block-em;
$logo-flap-size: $shrink-leaf-em;
$stack-order: (
	"logo",
);

@mixin mobile-header-logo-link {
	background-color: map.get($theme, "background", "hex");

	@include equal-dim($logo-size-mobile);
	@include shape(
		["distorted-square", "top-left"],
		("right": 100%, "corner-x": calc(100% - #{$header-padding-offset-mobile}), "corner-y": calc(100% - #{$header-padding-offset-mobile}))
	);
}

@mixin normal-header {
	height: $header-size-em;

	@include no-bg;

	#logo {
		@include equal-dim($logo-size-normal);

		& > a {
			@include equal-dim($logo-size-normal);
			@include shape(["square"]);

			& > #img-wrapper > img {
				@include invert-color;
				@include equal-dim($logo-img-size);
			}
		}
	}
}

@mixin shrink-header {
	height: var(--shrink-header-size-em, #{$shrink-header-size-em});
	background-color: map.get($theme, "background", "dark-5%", "hex");

	& #logo {
		@include equal-dim($logo-size-shrink);

		& > a {
			@include shape-content-props("flap", $logo-flap-size) using ($flap-content-size, $flap-content-offset) {
				display: block;
				background-color: map.get($theme, "accent", "hex");

				// TODO: Check if same can be applied to normal header
				@include absolute-top-left;
				@include equal-dim($logo-flap-size);
				@include shape(["flap", "top-left"]);

				& > #img-wrapper {
					top: $flap-content-offset;
					left: $flap-content-offset;

					@include center-anchored-image;

					& > img {
						@include reset-invert-color;
						@include equal-dim($flap-content-size);
					}
				}
			}
		}
	}
}

:host {
	@include full-viewport-width;
	@include absolute-top-left;
	@include stack("header");

	& > #header-wrapper {
		transition: all 0.5s ease;

		@include flex-row-start;

		#logo {
			@include flex-row-start;
			@include stack("header", "logo", $stack-order);

			& > a {
				transition: all 0.5s ease;

				@include flex-row-center;

				& > #img-wrapper > img {
					transition: all 0.5s ease;
				}
			}
		}

		&:not(.shrink-header) {
			@include normal-header;

			@include media("screen", "<=phone") {
				& > #logo > a {
					@include mobile-header-logo-link;
				}
			}
		}

		&.shrink-header {
			@include shrink-header;
		}
	}
}
