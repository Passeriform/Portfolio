@use "sass:map";
@use "sass:math";
@use "map-plus";

/// Global registry for persistent use
$theme-registry: ("default": generate-color-swatch());

/// Registry operations
@function register-theme($themeAccessor, $swatch) {
	@if ($theme-accessor == null) {
		@error "Must specify an accessor string as key for registering swatch.";
	}

	@if (type-of($swatch) != map) {
		@warn "Specified argument is not a color swatch map.";
	}

	@debug map.set($theme-registry, $theme-accessor, $swatch);
}

@function get-theme-element($accessor) {
	@if (map.has-key($theme-registry, $accessor)) {
		@return map.get($theme-registry, $accessor);
	}

	@warn "Could not find the requested theme in registry. Returning the default theme instead.";

	@return map.get($theme-registry, "default");
}

/// Color swatch generator
@function generate-color-swatch(
	$primary: #EEEEEE,
	$secondary: #191919,
	$accent: $primary,
	$alt-accent: $accent,
	$foreground: $primary,
	$background: $secondary,
	$canvas: $background,
	$highlight: $accent,
	$shadow: $alt-accent,
) {
	$primary: map-plus.merge-all(("hex": $primary), generate-accents($primary));
	$secondary: map-plus.merge-all(("hex": $secondary), generate-accents($secondary));
	$accent: map-plus.merge-all(("hex": $accent), generate-accents($accent));
	$alt-accent: map-plus.merge-all(("hex": $alt-accent), generate-accents($alt-accent));
	$foreground: map-plus.merge-all(("hex": $foreground), generate-accents($foreground));
	$background: map-plus.merge-all(("hex": $background), generate-accents($background));
	$canvas: map-plus.merge-all(("hex": $canvas), generate-accents($canvas));
	$highlight: map-plus.merge-all(("hex": $highlight), generate-accents($highlight));
	$shadow: map-plus.merge-all(("hex": $shadow), generate-accents($shadow));

	$primitive-map: (
		"primary": $primary,
		"secondary": $secondary,
		"accent": $accent,
		"alt-accent": $alt-accent,
		"foreground": $foreground,
		"background": $background,
		"canvas": $canvas,
		"highlight": $highlight,
		"shadow": $shadow,
	);

	@return $primitive-map;
}

@function generate-accents($color) {
	@if ($color == null) {
		@error "No color was supplied to the function";
	}

	$shades-and-tints: ();

	@for $factor from 1 through 15 {
		$percent: $factor * 5;

		$shade: (
			"dark-#{$percent}%": (
				"hex": darken($color, percentage(math.div($percent, 100)))
			)
		);

		$tint: (
			"light-#{$percent}%": (
				"hex": lighten($color, percentage(math.div($percent, 100)))
			)
		);

		$shades-and-tints: map-plus.merge-all($shades-and-tints, $shade, $tint);
	}

	@return map-merge($shades-and-tints, ("invert": ("hex": invert($color))));
}
